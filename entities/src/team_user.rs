//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "team_user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(unique)]
    pub nickname: String,
    pub user_function: String,
    pub twitter: Option<String>,
    pub discord: Option<String>,
    pub created_at: DateTime,
    pub team_role_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::team_role::Entity",
        from = "Column::TeamRoleId",
        to = "super::team_role::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    TeamRole,
}

impl Related<super::team_role::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TeamRole.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
